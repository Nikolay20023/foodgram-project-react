name: foodgram workflow

on: [push]

jobs:
  copy_files_to_server:
    name: Copy infra and docks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create project directory
        uses: appleboy/ssh-action@master
        with: 
          command: scp -r ./infra ${{ secrets.USER}}@${{ secrets.HOST }}:/home/nikolay20023/projects
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER}}
          key: ${{ secrets.PRIVATE_KEY}}
          passphrase: ${{ secrets.PASSPHRASE}}

  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pep8-naming flake8-broken-line flake8-return
        pip install -r backend/foodgram/requirements.txt
    - name: Test with flake8 
      run: |
        python -m flake8

  build_and_push_backend_to_DockerHub:
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: ${{secrets.DOCKER_USERNAME}}
        password: ${{secrets.DOCKER_PASSWORD}}
    - name: Push to DockerHub
      uses: docker/build-push-action@v2
      with: 
        context: ./backend/foodgram/
        push: true  
        tags: ${{secrets.DOCKER_USERNAME}}/foodgram:latest
  
  build_and_push_frontend_to_DockerHub:
    runs-on: ubuntu-latest
    needs: build_and_push_backend_to_DockerHub
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with: 
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: Push to Docker_hub
        uses: docker/build-push-action@v2
        with:
          context: ./frontend/
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/foodgram_front:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_backend_to_DockerHub
      - build_and_push_frontend_to_DockerHub
      - copy_files_to_server
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          commands: cd projects && mkdir -p backend && mkdir -p backend/foodgram && mkdir -p frontend
          host: ${{secrets.HOST}}
          username: ${{ secrets.USER}}
          key: ${{ secrets.PRIVATE_KEY}}
          passphrase: ${{ secrets.PASSPHRASE}}
          scripts: |
            cd projects/infra/
            rm -f .env
            touch .env 

            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS}} >> .env

            sudo docker-compose stop
            sudo docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs sudo docker rm
            sudo docker rmi ${{ secrets.DOCKER_USER }}/foodgram_front
            sudo docker rmi ${{ secrets.DOCKER_USER }}/foodgram_back
            sudo docker-compose up -d
            sudo docker image prune -a